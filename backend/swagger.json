{
  "openapi": "3.1.1",
  "info": {
    "title": "CAML API",
    "description": "CAML Assisted Mobility Lift API",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:4000/",
      "description": "Localhost server"
    }
  ],
  "paths": {
    "/api/airports": {
      "get": {
        "summary": "Retrieve all airports",
        "description": "Fetch a list of all available airports.",
        "responses": {
          "200": {
            "description": "A list of airports retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "The unique identifier for the airport."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the airport."
                      },
                      "code": {
                        "type": "string",
                        "description": "The IATA/ICAO airport code."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the airport."
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/carts": {
      "get": {
        "summary": "Retrieve carts based on airport code",
        "description": "Fetch all carts associated with a specific airport by providing the airport code as a query parameter.",
        "parameters": [
          {
            "in": "query",
            "name": "airportCode",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The airport code to filter carts by."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of carts retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "The unique identifier for the cart."
                      },
                      "airport": {
                        "type": "string",
                        "description": "The associated airport code."
                      },
                      "otherFields": {
                        "type": "string",
                        "description": "Additional cart-related fields."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, missing or invalid parameters."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/cart": {
      "get": {
        "summary": "Retrieve a cart by cart ID",
        "description": "Fetch a specific cart using its cart ID as a query parameter.",
        "parameters": [
          {
            "in": "query",
            "name": "cartId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The unique cart ID to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Cart retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "The unique identifier for the cart."
                    },
                    "cartId": {
                      "type": "string",
                      "description": "The cart's unique ID."
                    },
                    "otherFields": {
                      "type": "string",
                      "description": "Additional cart-related fields."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, missing or invalid parameters."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/tasks": {
      "post": {
        "summary": "Create a new task",
        "description": "Adds a new task to the database with the provided details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "taskID",
                  "airport",
                  "airportLoc",
                  "startPoint",
                  "CartNum",
                  "taskTime",
                  "status"
                ],
                "properties": {
                  "taskID": {
                    "type": "string",
                    "description": "Unique identifier for the task."
                  },
                  "airport": {
                    "type": "string",
                    "description": "The airport associated with the task."
                  },
                  "airportLoc": {
                    "type": "string",
                    "description": "The location within the airport."
                  },
                  "startPoint": {
                    "type": "string",
                    "description": "The starting point for the task."
                  },
                  "CartNum": {
                    "type": "integer",
                    "description": "The number of carts involved in the task."
                  },
                  "taskTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp for the task."
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the task (e.g., pending, completed)."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Task created successfully"
                    },
                    "task": {
                      "type": "object",
                      "properties": {
                        "taskID": {
                          "type": "string"
                        },
                        "airport": {
                          "type": "string"
                        },
                        "airportLoc": {
                          "type": "string"
                        },
                        "startPoint": {
                          "type": "string"
                        },
                        "CartNum": {
                          "type": "integer"
                        },
                        "taskTime": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "status": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, missing or invalid parameters."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    }
  }
}
